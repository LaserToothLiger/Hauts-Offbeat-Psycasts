<?xml version="1.0" encoding="utf-8" ?>
<Patch>
	<Operation Class="PatchOperationFindMod">
		<mods>
			<li>AI Can Use Psycasts</li>
		</mods>
		<match Class="PatchOperationSequence">
			<operations>
				<!--links should be castable-->
				<li Class="PatchOperationAdd">
					<xpath>Defs/AbilityDef[@ParentName="HVMP_PsycastBaseLink"]</xpath>
					<value>
						<aiCanUse>true</aiCanUse>
					</value>
				</li>
				<li Class="PatchOperationAdd">
					<xpath>Defs/AbilityDef[@ParentName="HVMP_PsycastBaseCall"]</xpath>
					<value>
						<aiCanUse>true</aiCanUse>
					</value>
				</li>
				<!--sensitize has to be disabled. if the player has hostile psycasts scaling off psysens the AI is actually nerfing itself by casting sensitize on self; and when casting it on opponents it's only useful if there's some follow-up psysens-scaling debuff/attack
				also, AICUP isn't smart enough to cast vault skip w/o it being a huge disaster, and we never want it to use Word of Melding-->
				<li Class="PatchOperationConditional">
					<xpath>/Defs/AbilityDef[defName="HVP_Sensitize" or defName="HVP_VaultSkip" or defName="HVP_WordOfMelding"]/aiCanUse</xpath>
					<nomatch Class="PatchOperationAdd">
						<xpath>/Defs/AbilityDef[defName="HVP_Sensitize" or defName="HVP_VaultSkip" or defName="HVP_WordOfMelding"]</xpath>
						<value>
							<aiCanUse>false</aiCanUse>
						</value>
					</nomatch>
					<match Class="PatchOperationAdd">
						<xpath>/Defs/AbilityDef[defName="HVP_Sensitize" or defName="HVP_VaultSkip" or defName="HVP_WordOfMelding"]/aiCanUse</xpath>
						<value>
							<aiCanUse>false</aiCanUse>
						</value>
					</match>
				</li>
				<!--These should be used on hostiles, and the AI is well-suited to use them as such-->
				<li Class="PatchOperationConditional">
					<xpath>/Defs/AbilityDef[defName="HVP_TetherSkip"]/hostile</xpath>
					<nomatch Class="PatchOperationAdd">
						<xpath>/Defs/AbilityDef[defName="HVP_TetherSkip"]</xpath>
						<value>
							<hostile>true</hostile>
						</value>
					</nomatch>
					<match Class="PatchOperationAdd">
						<xpath>/Defs/AbilityDef[defName="HVP_TetherSkip"]/hostile</xpath>
						<value>
							<hostile>true</hostile>
						</value>
					</match>
				</li>
				<li Class="PatchOperationConditional">
					<xpath>/Defs/AbilityDef[defName="HVP_PsyphonLink"]/hostile</xpath>
					<nomatch Class="PatchOperationAdd">
						<xpath>/Defs/AbilityDef[defName="HVP_PsyphonLink"]</xpath>
						<value>
							<hostile>true</hostile>
						</value>
					</nomatch>
					<match Class="PatchOperationAdd">
						<xpath>/Defs/AbilityDef[defName="HVP_PsyphonLink"]/hostile</xpath>
						<value>
							<hostile>true</hostile>
						</value>
					</match>
				</li>
				<li Class="PatchOperationConditional">
					<xpath>/Defs/AbilityDef[defName="HVP_Skiptheft"]/hostile</xpath>
					<nomatch Class="PatchOperationAdd">
						<xpath>/Defs/AbilityDef[defName="HVP_Skiptheft"]</xpath>
						<value>
							<hostile>true</hostile>
						</value>
					</nomatch>
					<match Class="PatchOperationAdd">
						<xpath>/Defs/AbilityDef[defName="HVP_Skiptheft"]/hostile</xpath>
						<value>
							<hostile>true</hostile>
						</value>
					</match>
				</li>
				<!--Tetherskip has its own "AI" that snaps back victims once they get too far away, it's just off by default. we need to turn it on. this AI is slightly less complex about choosing when to recall than HIPAA's version-->
				<li Class="PatchOperationConditional">
					<xpath>/Defs/AbilityDef[defName="HVP_TetherSkip"]/comps/li[@Class="HautsPsycasts.CompProperties_AbilityTetherSkip"]/aiCanAutoRecall</xpath>
					<nomatch Class="PatchOperationAdd">
						<xpath>/Defs/AbilityDef[defName="HVP_TetherSkip"]/comps/li[@Class="HautsPsycasts.CompProperties_AbilityTetherSkip"]</xpath>
						<value>
							<aiCanAutoRecall>true</aiCanAutoRecall>
						</value>
					</nomatch>
					<match Class="PatchOperationAdd">
						<xpath>/Defs/AbilityDef[defName="HVP_TetherSkip"]/comps/li[@Class="HautsPsycasts.CompProperties_AbilityTetherSkip"]/aiCanAutoRecall</xpath>
						<value>
							<aiCanAutoRecall>true</aiCanAutoRecall>
						</value>
					</match>
				</li>
			</operations>
		</match>
	</Operation>
</Patch>